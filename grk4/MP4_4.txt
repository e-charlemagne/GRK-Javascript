
<style> body {background-color: #ccc;}</style>
<script src = "//cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.7/p5.js"></script>
<body>
<script type="text/javascript">
    var imgA;
    var imgB;

    function setup(){
        createCanvas(512, 512);
        background(255);
        imgA = createImage(512, 512);
        imgB = createImage(512, 512);
        imgA.loadPixels();
        imgB.loadPixels();
        var d = pixelDensity();
        for (var i = 0; i < 512 * 512 * 4 * d; i += 4) {
            imgA.pixels[i] = 240;
            imgA.pixels[i + 1] = 250;
            imgA.pixels[i + 2] = 240;
            imgA.pixels[i + 3] = 255;
            imgB.pixels[i] = 240;
            imgB.pixels[i + 1] = 240;
            imgB.pixels[i + 2] = 250;
            imgB.pixels[i + 3] = 255;
        }
        imgA.updatePixels();
        imgB.updatePixels();
    }

    function draw() {
        if (!keyIsDown(32)) {
            image(imgA, 0, 0);
            text('Image A', 10, 20);
        } else {
            image(imgB, 0, 0);
            text('Image B', 10, 20);
        }
    }

    function makeVector(x, y) {
       let vec=[x,y,1];
        return  vec;
    }

    function drawVector(img, vec) {
        img.loadPixels();
        img.set(vec[0], vec[1], 0);
        img.updatePixels();
    }

    function mouseDragged() {
        let v = makeVector(mouseX,mouseY)
        drawVector(imgA, v);
        drawVector(imgB,formulaOfMultiplication(identityMatrix(),v));
      //  drawVector(imgB,formulaOfMultiplication(translationMatrix(50,-100),v));
       //   drawVector(imgB,formulaOfMultiplication(scallingMatrix(1.5,1.5),v));
      //  drawVector(imgB,formulaOfMultiplication(rotationMatrix(1/8 * Math.PI),v));
      drawVector(imgB,formulaOfMultiplication(shearTransformMatrix(0.9,0.2),v));

    }

    /*--------------------3.5---------------------*/

    function identityMatrix(){
        let i_m = [[1,0,0],[0,1,0],[0,0,1]];
        return i_m;
    }
    function translationMatrix(tx , ty){
        let t_m = [[1,0,tx], [0,1,ty],[0,0,1]];
        return t_m;
    }
    function scallingMatrix(sx, sy){
        let s_m = [[sx,0,0], [0,sy,0], [0,0,1]];
        return s_m;
    }
    let θ;
    function rotationMatrix(θ){
        let r_m = [
            [Math.cos(θ),-Math.sin(θ), 0],
            [Math.sin(θ), Math.cos(θ), 0],
            [0,           0,           1]
        ];
        return r_m;
    }
    function shearTransformMatrix(Sh_x, Sh_y){
        let s_T_M = [[1,Sh_x,0],[Sh_y,1,0],[0,0,1]];
        return s_T_M;
    }
/*-------------------------4.0----------------------------*/
    function formulaOfMultiplication(matrix ,vector){
        let  i ,j ;
        let resultMatrix = [0,0,0];
            for (i= 0; i < 3; ++i){
             for (j = 0; j < 3; ++j){
                resultMatrix[i] +=matrix[i][j] * vector[j];
            }
        }
    return resultMatrix;

    }


  /*  function printingWhatIveDone() {
        console.log("printing all that stuff for 3.5");
        console.log(" IDENTITY MATRIX: ");
        console.log( identityMatrix());
        console.log(" TRANSLATION MATRIX: ");
        console.log(translationMatrix(100, 150));
        console.log(" SCALLING MATRIX: ");
        console.log(scallingMatrix(1231, 1414));
        console.log(" ROTATION MATRIX: ");
        console.log(rotationMatrix(
            (Math.Pi * 30/ 180)
        ));
        console.log(" SHEAR-TRANSFORM MATRIX: ");
        console.log(shearTransformMatrix(21, 13));
    }
    printingWhatIveDone();

   */

</script>
</body>




